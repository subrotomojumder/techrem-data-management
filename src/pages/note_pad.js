import Head from 'next/head'
import { BsCaretDownFill, BsFillCaretRightFill, BsFolderPlus } from 'react-icons/bs';
import { HiOutlineDocumentAdd } from 'react-icons/hi';
import { TfiSave } from 'react-icons/tfi';
import { BiPrinter } from 'react-icons/bi';
import { FaRegCopy } from 'react-icons/fa';
import { GiMicroscope } from 'react-icons/gi';
import { MdContentPaste } from 'react-icons/md';
import { FcOpenedFolder } from 'react-icons/fc';
import { SlScreenDesktop, SlScreenTablet, SlSymbleFemale } from 'react-icons/sl';
import { IoIosCut, IoIosRedo, IoIosUndo } from 'react-icons/io';
import { useEffect, useRef, useState } from 'react';
import { handleClipboardCopy } from '@/utils/copy';



export default function NotePad() {
  const [openDropdown, setOpenDropdown] = useState({});
  const [inputValue, setInputValue] = useState('');
  const ref = useRef();
  useEffect(() => {
    setInputValue(localStorage.getItem("note"))
  }, []);
  
  const saveData = (e) => {
    console.log(e.target.value);
  }
  // console.log(inputValue);
  const handleInput = e => {
    setInputValue(e.target.value)
  };
  useEffect(() => {
    setTimeout(() => {
      localStorage.setItem("note", inputValue)
    }, 200)
  }, [inputValue])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='rounded-lg max-w-6xl mx-auto border border-gray-400 p-[1px] bg-white drop-shadow-lg min-h-screen my-4'>
        <section>
          <h3 className='text-xl text-center py-[6px] bg-slate-300 font-medium rounded-t-lg drop-shadow-sm border-b border-blue-700'>Online notepad</h3>
          <nav className='select-none bg-gray-100 text-md'>
            <ul className='flex justify-start gap-1 px-2 py-1 border-b border-gray-400'>
              <li className='relative'>
                <button
                  onBlur={() => setTimeout(() => setOpenDropdown({ ...openDropdown, open: false }), 100)}
                  onMouseOver={() => setOpenDropdown({ ...openDropdown, name: "file" })}
                  onClick={() => setOpenDropdown({ ...openDropdown, open: !openDropdown.open && true })}
                  className={`${openDropdown.open && openDropdown.name === "file" && "bg-white outline"} hover:outline hover:bg-white outline-1 outline-gray-400 px-2 py-[2px] cursor-pointer`}
                >
                  File <BsCaretDownFill className='inline text-xs' />
                </button>
                {openDropdown.open && openDropdown.name === "file" &&
                  <div className='border border-gray-300 py-1 w-fit whitespace-pre bg-gray-50 drop-shadow-sm absolute top-[30px] -left-[1px]'>
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer'><HiOutlineDocumentAdd className='inline-block -mt-1 font-thin text-xl text-gray-500 group-hover:text-white mr-[2px]' />New Document</p>
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer  flex justify-between'><span><TfiSave className='inline-block -mt-1 font-thin text-base text-gray-500 group-hover:text-white mr-[6px]' />Save</span> <span className='text-gray-400'>Ctrl+S</span></p>
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer  flex justify-between'><span><BsFolderPlus className='inline-block -ml-[1px] -mt-1 font-thin text-xl text-gray-500 group-hover:text-white mr-1' />Open</span> <span className='text-gray-400'>Ctrl+S</span></p>
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer  flex justify-between'><span><BiPrinter className='inline-block -mt-1 font-thin text-xl text-gray-500 group-hover:text-white mr-1' />Print</span> <span className='text-gray-400'>Ctrl+P</span></p>
                  </div>}
              </li>
              <li className='relative'>
                <button
                  onBlur={() => setTimeout(() => setOpenDropdown({ ...openDropdown, open: false }), 100)}
                  onMouseOver={() => setOpenDropdown({ ...openDropdown, name: "edit" })}
                  onClick={() => setOpenDropdown({ ...openDropdown, open: !openDropdown.open && true })}
                  className={`${openDropdown.open && openDropdown.name === "edit" && "bg-white outline"} hover:bg-white hover:outline outline-1 outline-gray-400 px-2 py-[2px] cursor-pointer`}
                >
                  Edit <BsCaretDownFill className='inline text-xs' />
                </button>
                {openDropdown.open && openDropdown.name === "edit" &&
                  <div className='border border-gray-300 py-1 w-fit whitespace-pre bg-gray-50 drop-shadow-sm absolute top-[30px] -left-[1px]'>
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer  flex justify-between gap-8'><span><IoIosUndo className='inline-block -mt-1 font-thin text-base text-gray-500 group-hover:text-white mr-[6px]' />Undo</span> <span className='text-gray-400'>Ctrl+Z</span></p>
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer  flex justify-between gap-8'><span><IoIosRedo className='inline-block -ml-[1px] -mt-1 font-thin text-base text-gray-500 group-hover:text-white mr-1' />Redo</span> <span className='text-gray-400'>Ctrl+Y</span></p>
                    <hr className='my-1' />
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer  flex justify-between gap-8'><span><IoIosCut className='inline-block -mt-1 font-thin text-lg text-gray-500 group-hover:text-white mr-1' />Cut</span> <span className='text-gray-400'>Ctrl+X</span></p>
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer  flex justify-between gap-8'><span><FaRegCopy className='inline-block -mt-1 font-thin text-lg text-gray-500 group-hover:text-white mr-1' />Copy</span> <span className='text-gray-400'>Ctrl+C</span></p>
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer  flex justify-between gap-8'><span><MdContentPaste className='inline-block -mt-1 font-thin text-lg text-gray-500 group-hover:text-white mr-1' />Paste</span> <span className='text-gray-400'>Ctrl+V</span></p>
                    <hr className='my-1' />
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer  flex justify-between gap-8'><span>Select all</span> <span className='text-gray-400'>Ctrl+A</span></p>
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer  flex justify-between gap-8'><span>Find</span> <span className='text-gray-400'>Ctrl+F</span></p>
                  </div>}
              </li>
              <li className='relative'>
                <button
                  onBlur={() => setTimeout(() => setOpenDropdown({ ...openDropdown, open: false }), 100)}
                  onMouseOver={() => setOpenDropdown({ ...openDropdown, name: "insert" })}
                  onClick={() => setOpenDropdown({ ...openDropdown, open: !openDropdown.open && true })}
                  className={`${openDropdown.open && openDropdown.name === "insert" && "bg-white outline"} hover:outline hover:bg-white outline-1 outline-gray-400 px-2 py-[2px] cursor-pointer`}
                >
                  Insert <BsCaretDownFill className='inline text-xs' />
                </button>
                {openDropdown.open && openDropdown.name === "insert" &&
                  <div className='border border-gray-300 py-1 w-fit whitespace-pre bg-gray-50 drop-shadow-sm absolute top-[30px] -left-[1px]'>
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer  flex justify-between gap-10 items-center group'><span>Date/Time</span> <span className='text-gray-400'><BsFillCaretRightFill className='text-xs group-hover:text-white' /></span></p>
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer '><span><SlSymbleFemale className='inline-block -mt-[2px] font-thin text-lg text-gray-500 group-hover:text-white mr-1' />Special Sign</span></p>
                  </div>}
              </li>
              <li className='relative'>
                <button
                  onBlur={() => setTimeout(() => setOpenDropdown({ ...openDropdown, open: false }), 100)}
                  onMouseOver={() => setOpenDropdown({ ...openDropdown, name: "view" })}
                  onClick={() => setOpenDropdown({ ...openDropdown, open: !openDropdown.open && true })}
                  className={`${openDropdown.open && openDropdown.name === "view" && "bg-white outline"} hover:outline hover:bg-white outline-1 outline-gray-400 px-2 py-[2px] cursor-pointer`}
                >
                  View <BsCaretDownFill className='inline text-xs' />
                </button>
                {openDropdown.open && openDropdown.name === "view" &&
                  <div className='border border-gray-300 py-1 w-fit whitespace-pre bg-gray-50 drop-shadow-sm absolute top-[30px] -left-[1px]'>
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer  flex justify-between gap-3 items-center group'><span>Full Screen</span> <span className='text-gray-400'><SlScreenDesktop className='text-lg group-hover:text-white' /></span></p>
                    <p className='hover:bg-indigo-500 hover:text-white px-3 my-2 group cursor-pointer  flex justify-between gap-3 items-center group'><span>Medium Screen</span> <span className='text-gray-400'><SlScreenTablet className='text-lg group-hover:text-white' /></span></p>
                  </div>}
              </li>
              <li className='relative'>
                <button
                  onBlur={() => setTimeout(() => setOpenDropdown({ ...openDropdown, open: false }), 100)}
                  onMouseOver={() => setOpenDropdown({ ...openDropdown, name: "help" })}
                  onClick={() => setOpenDropdown({ ...openDropdown, open: !openDropdown.open && true })}
                  className={`${openDropdown.open && openDropdown.name === "help" && "bg-white outline"} hover:outline hover:bg-white outline-1 outline-gray-400 px-2 py-[2px] cursor-pointer`}
                >
                  Help <BsCaretDownFill className='inline text-xs' />
                </button>
                {openDropdown.open && openDropdown.name === "help" &&
                  <div className='border border-gray-300 py-1 w-fit whitespace-pre bg-gray-50 drop-shadow-sm absolute top-[30px] -left-[1px]'>
                    <p className='hover:bg-indigo-500 hover:text-white pl-3 pr-16 my-2 group cursor-pointer '><span>Shortcuts</span></p>
                    <hr className='my-1' />
                    <p className='hover:bg-indigo-500 hover:text-white pl-3 pr-16 my-2 group cursor-pointer '><span>Home Page</span></p>
                  </div>}
              </li>
            </ul>
            <ul className='flex justify-start items-center gap-1 px-2 py-[2px]  border-b border-gray-400'>
              <button className='text-2xl hover:outline outline-1 outline-zinc-500 hover:bg-zinc-300 py-1 px-[6px] text-zinc-500 hover:text-white' title='New Document'><HiOutlineDocumentAdd /></button>
              <button className='text-2xl hover:outline outline-1 outline-zinc-500 hover:bg-zinc-300 py-1 px-[6px]' title=''><FcOpenedFolder /></button>
              <button className='text-lg hover:outline outline-1 outline-zinc-500 hover:bg-zinc-300 py-[6px] px-2 hover:text-white' title=''><TfiSave /></button>
              <button onClick={()=>handleClipboardCopy(ref)} className='text-lg hover:outline outline-1 outline-zinc-500 hover:bg-zinc-300 py-[6px] px-2 text-zinc-600 hover:text-white' title=''><FaRegCopy /></button>
              <button className='text-xl hover:outline outline-1 outline-zinc-500 hover:bg-zinc-300 py-[6px] px-2 text-zinc-600 hover:text-white' title=''><IoIosCut /></button>
              <button className='text-lg hover:outline outline-1 outline-zinc-500 hover:bg-zinc-300 py-[6px] px-2 text-zinc-600 hover:text-white' title=''><MdContentPaste /></button>
              <button className='text-lg hover:outline outline-1 outline-zinc-500 hover:bg-zinc-300 py-[6px] px-2 text-zinc-600 hover:text-white' title=''><IoIosUndo /></button>
              <button className='text-lg hover:outline outline-1 outline-zinc-500 hover:bg-zinc-300 py-[6px] px-2 text-zinc-600 hover:text-white' title=''><IoIosRedo /></button>
              <button className='text-lg hover:outline outline-1 outline-zinc-500 hover:bg-zinc-300 py-[6px] px-2 text-zinc-600 hover:text-white' title=''><GiMicroscope /></button>
              <li className='relative'>
                <button
                  onBlur={() => setTimeout(() => setOpenDropdown({ ...openDropdown, open: false }), 100)}
                  onMouseOver={() => setOpenDropdown({ ...openDropdown, name: "font" })}
                  onClick={() => setOpenDropdown({ ...openDropdown, open: !openDropdown.open && true })}
                  className={`${openDropdown.open && openDropdown.name === "font" && "bg-zinc-300 outline text-white"} hover:outline hover:bg-zinc-300 outline-1 outline-gray-400 px-2 py-[3px] cursor-pointer`}
                >
                  Font size <BsCaretDownFill className='inline text-xs' />
                </button>
                {openDropdown.open && openDropdown.name === "font" &&
                  <div className='border border-gray-300 py-1 w-28 whitespace-pre bg-gray-50 drop-shadow-sm absolute top-8 -left-[1px] max-h-[200px] overflow-y-scroll overflow-x-hidden'>
                    <p className='px-2 py-[2px] hover:bg-blue-500 hover:text-white'>8 pt</p>
                    <p className='px-2 py-[2px] hover:bg-blue-500 hover:text-white'>10 pt</p>
                    <p className='px-2 py-[2px] hover:bg-blue-500 hover:text-white'>12 pt</p>
                    <p className='px-2 py-[2px] hover:bg-blue-500 hover:text-white'>14 pt</p>
                    <p className='px-2 py-[2px] hover:bg-blue-500 hover:text-white'>18 pt</p>
                    <p className='px-2 py-[2px] hover:bg-blue-500 hover:text-white'>24 pt</p>
                    <p className='px-2 py-[2px] hover:bg-blue-500 hover:text-white'>36 px</p>
                  </div>}
              </li>
            </ul>
          </nav>
        </section>
        <textarea value={inputValue} ref={ref} onChange={handleInput} className='min-h-[85vh] w-full p-2 outline-none resize-none h-fit'></textarea>
      </main>
    </>
  )
}
